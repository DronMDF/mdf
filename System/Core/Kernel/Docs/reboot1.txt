Copyright (c) 2000-2007 Валяев Андрей (dron@infosec.ru)
All rights reserved.

Создано: 27/06/07 17:45:49

(17:12:48)  Дрон:  Мне че-то мое ядро асмовое надоело... переписывать надо на C++.
(17:13:03)  reboot:  а че так?
(17:13:37)  Дрон:  дык слишком геморно с ним. на с++ высокоуровневая часть будет гораздо лаконичнее.
(17:13:53)  Дрон:  на асме останется только небольшая прослойка
(17:14:04)  reboot:  а само ядро я думаю все же лучше на асме
(17:14:26)  Дрон:  я уже не думаю так...
(17:14:32)  reboot:  почему?
(17:14:37)  Дрон:  раньше я тоже так думал.
(17:15:06)  Дрон:  Но сейчас думаю, что реально низкоуровневой лабуды в ядре мало...
(17:15:28)  Дрон:  Естественно эту лабуду необходимо писать на асме, дабы четче понимать что делаешь.
(17:15:37)  Дрон:  А инлайн асм - это ужасный изврат
(17:15:48)  reboot:  я уже это понял
(17:16:05)  Дрон:  А вся остальная часть - это обычная программная логика... которую на асме слишком геморно программить :(
(17:16:26)  Дрон:  структуры, объекты и тд...
(17:16:32)  reboot:  ясно
(17:17:18)  Дрон:  Я думаю, что придумаю свою архитектуру... (нет никакого смысла слизывать с реальной, наоборот надо быть как можно более универсальным в этом плане.
(17:17:37)  Дрон:  А прослойка какраз таки и будет превращать реальную архитектуру в универсальную
(17:17:43)  reboot:  что ты подразумеваешь под архитектурой?
(17:17:46)  reboot:  проц?
(17:17:57)  Дрон:  Щас объясню.
(17:18:20)  Дрон:  Универсальная часть не должна подвергаться переделками при переносе с платформы на платформу
(17:18:44)  Дрон:  то есть я разрабатываю некоторую си платформу - у которой собственно не асм, а сишные команды.
(17:19:41)  Дрон:  причем у этой платформы есть всего два исключения (ну ориентировочно) - исключение по памяти и исключение по портам ввода-вывода
(17:20:00)  Дрон:  остальные программные тонкости обработки исключений нас не интересуют
(17:20:55)  Дрон:  вот... прерывания - абстрактные - типа прерывание номер 0. прерывание номер 1.
программные тонкости работы контроллера нас тоже не интересут
(17:21:17)  reboot:  этим займется прослойка?
(17:21:51)  Дрон:  в универсальном ядре будет только две точки входа по прерываниям - прерывание таймера и прочие прерывания
(17:22:26)  Дрон:  угу, прослойка ловит прерывание, всякие значения делает как надо и вызывает универсальный обработчик
(17:23:17)  Дрон:  немного сложнее с нитями - я думаю некое понятие нити доложно быть на уровне архитектуры...
(17:23:26)  Дрон:  типа структура или объект специальный.
(17:23:28)  reboot:  не думаю
(17:23:37)  reboot:  это не есть гуд
(17:24:12)  Дрон:  это будет абстракция - типа у нити есть пространство памяти, есть пространство портов вода-вывода
(17:24:17)  Дрон:  и всею
(17:24:53)  Дрон:  Я вот еще думаю разделить пространства памяти на ядерное и нитиевое - типа как быдто они вообще отдельные :)
(17:25:12)  Дрон:  тогда исключений будет три - исключение по памяти ядра, исключение по памяти нити
(17:25:30)  Дрон:  и по портам естествено тоже
(17:25:51)  Дрон:  А всякие процессы - это будет вообще дело исключительно универсального ядра
(17:26:11)  Дрон:  Были мысли сделать страницы опциональными - но пока не знаю насколько это возможно
(17:26:32)  Дрон:  по любому размер страницы должен быть настраиваемым через архитектуру
(17:27:08)  Дрон:  И собственно ядро будет состоять из трех частей
(17:27:17)  Дрон:  первая часть - это типы платформы
(17:27:20)  reboot:  как запутано
(17:27:23)  Дрон:  в основном инклюды
(17:27:39)  Дрон:  вторая часть - универсальное ядро - это типа либа такая
(17:27:44)  Дрон:  или просто обж
(17:28:11)  Дрон:  и третья часть - это стаб - асмовая прослойка которая линкует к себе универсальное ядро и получается один большой модуль
(17:29:09)  Дрон:  собственно асм станет весьма тривиальным - будет состоять исключительно из функций, которые только и делают что доносят внешнюю инфу до универсального ядра и команды универсального ядра доносят до архитектуры
(17:29:22)  reboot:  ога ясно
(17:29:57)  Дрон:  В принципе базовые девайсы можно оставить универсальными... а можно и в стаб запихать...
(17:30:14)  Дрон:  Базовых там - только [A]PIC да и все
(17:30:24)  reboot:  а проц? =)
(17:30:47)  Дрон:  проц трудно назвать девайсом... проц это есть архитектура сама ;)
(17:31:03)  reboot:  ну да...но..хз....память?
(17:31:07)  reboot:  порты?
(17:31:17)  Дрон:  кстати вот например FPU - при переключении задачи надо корректно сохранять его состояние, но это дело исключительно стаба.
(17:31:33)  Дрон:  то есть для универсального ядра FPU не существует
(17:31:54)  Дрон:  память - это не девайс - это ресурс
(17:32:00)  Дрон:  и порты тоже ресурс
(17:32:20)  Дрон:  щас я лог скопирую пожалуй...
(17:32:26)  reboot:  ладно..порты..их может быть разное количество на разных архитеуктурах?
(17:32:45)  Дрон:  да. может, но помоему они есть везде - как класс
(17:33:26)  Дрон:  можно сказать - что порты - это такая специальная память (некоторые компы помоему так и работают)
(17:33:38)  reboot:  да ладно?
(17:33:43)  Дрон:  которую тоже распределяешь между нитями.
(17:34:01)  reboot:  ну ладно..порты я крайне плохо знаю
(17:34:24)  Дрон:  Помоему на некоторых машинах просто область памяти отводится для доступа к портам.
(17:34:48)  reboot:  жесть
(17:35:15)  Дрон:  Если вдруг попадется архитектура, которая не дает возможности отследить к какому порту хотело обратиться приложение - то тогда портовое исключение вообще можно никогда не вызывать.
(17:35:35)  Дрон:  IA32 - тоже на прямую этого не умеет, косвенно умеет.
(17:35:41)  reboot:  это не есть гуд архитектура
(17:35:52)  Дрон:  всмысле можно узнать кто куда и зачем полез
(17:36:32)  Дрон:  а универсальный обработчик будет получать только номер порта, и маску нарушения прав...
(17:36:40)  Дрон:  как и пейджфолт
(17:36:48)  reboot:  вот вот
(17:37:00)  reboot:  очень кстати похоже обрабатывать придется
(17:42:47)  Дрон:  И еще мне не нравится как приходят коды нарушений... вообще кодов должно быть всего два.
(17:43:21)  reboot:  какие?
(17:43:34)  Дрон:  Не подключено (нет страницы или доступа к порту вообще)
Или подключено но недоступно для записи
(17:43:58)  Дрон:  юзер или не юзер - эторазруливается на другом уровне логики
(17:44:06)  Дрон:  вот...
(17:44:49)  Дрон:  ;) ниче что твое имя будет мелькать у меня в SVN? :)
(17:44:59)  reboot:  круто
