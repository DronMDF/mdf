
 Copyright (c) 2000-2006 Andrey Valyaev (dron@infosec.ru)
 All rights reserved.

 Создано: Среда 29 марта 2006


	1 Контроллер i8042

Оригинальный контроллер этого типа предназначался для PC клавиатур. Современные
контроллеры имеют более широкие возможности, но совместимы с оригинальным.
правда в отличии от оригинального могут иметь дополнительный порт AUX, который
теоретически ничем от KBD не отличается.

	1.1 Регистры контроллера
	1.1.1 Регистр статуса.

Внутренний регистр контроллера. состоит из следующих полей:

	бит 0: Определяет состояние буфера передачи. Бит установлен, если в
		буфере есть данные. Даные могут быть получены через порт данных.
	бит 1: Определяет состояние буфера приема. Бит сброшен, если буфер
		приема готов к приему данных. Данные могут быть переданы через
		порт даных или через порт команд, назначение данных определяется
		в зависимости от порта.
	бит 2: Этот бит устанавливается после инициализации контроллера.
	бит 3: Установлен, если последний байт был принят через порт команд.
	бит 4: Установлен, если клавиатура не заперта.
	бит 5: Установлен, если данные в буфере поступили от AUX порта.
	бит 6: Установлен, если произошел таймаут.
	бит 7: Установлен, если последняя передача имела ошибки четности.

Значение этого регистра может быть получено путем чтения значения из порта 0x64.


	1.1.2 Регистр команд.

Внутренний регистр контроллера, состоящий из следующих полей:

	бит 0: Разрешить генерацию прерывания при поступлении данных от
		устройства, подключенного к KBD порту.
	бит 1: Разрешить генерацию прерывания при поступлении данных от
		устройства, подключенного ко AUX порту.
	бит 2: Устанавливается после успешной инициализации контроллера.
	бит 3: Установлен, если клавиатура не заперта.
	бит 4: Запретить KBD порт.
	бит 5: Запретить AUX порт.
	бит 6: Режим совместимости с PC. (трансляция сканкодов) ???
	бит 7: зарезервирован.

Значение этого регистра может быть получено с помощью команды контроллера 0x20.
Комнада контроллера 0x60 позволяет записать регистр команд целиком, и еще
некоторые команды позволяют менять отдельные биты регистра команд.

	1.2 Физические порты контроллера
	1.2.1 Порт ввода

TODO


	1.2.2 Порт Вывода

TODO


	1.2.3 Тестовый порт.

TODO



	1.3 Порт данных (0x60)

Этот порт служит для получения/передачи данных устройств, так же через него
передаются/принимаются данные команд.


	1.4 Порт команд (0x64)

Данные, записанные в порт команд интерпретируются контроллером как команды.
Контроллер воспринимает следующие команды:

	0x20: Чтение регистра команды. Значение регистра команд передается в
		буфер передачи со всеми вытекающими.
	0x60: Запись регистра команды. Значение регистра команд передается через
		порт данных.
	0x9?: Запись порта вывода.
	0xa1: Получение версии контроллера клавиатуры. Номер версии будет
		передан через буффер вывода. ???
	0xa4: Статус пароля. Возвращает 0xf1 если пароль не установлен. 0xfa -
		если установлен.
	0xa5: Задать пароль. Пароль в виде сканкодов передается через порт
		данных и завершается кодом 0x00.
	0xa6: Проверить пароль.
	0xa7: Запретить AUX порт. Устанавливает бит 5 в регистре команды.
	0xa8: Разрешить AUX порт. Сбрасывает бит 5 в регистре команды.
	0xa9: Тестирование AUX порта. возвращает код 0x00 если тестирование
		успешно завершено.
	0xaa: Тестирование контроллера, возвращает код 0x55 если тестирование
		успешно завершено.
	0xab: Тестирование KBD порта. Возвращает код 0x00 в случае
		успешного завершения тестирования.
	0xad: Запретить KBD порт. Вероятно воздействует на бит 4 регистра
		команды.
	0xae: Разрешить KBD порт. см 0xad
	0xaf: Возвращает номер версии. TODO: надо будет проверить  и этот и 0xa1.
	0xb?: Запись во внутренние регистры. *VIA
	0xc0: Прочитать порт ввода. Результат содержит следующую информацию:
		бит 0: Установлен, если данные KBD поступили(in pin).
		бит 1: Установлен, если данные AUX поступили(in pin).
		бит 6: Не установлен если вы имеете моно экран. (при чем здесь
			клавиатура, интересно?)
		бит 7: Установлен, если клавиатура не заперта.
	0xc1: Копировать младшие нибблы порта ввода в регистр статуса.
	0xc2: Копировать старшие нибблы порта ввода в регистр статуса.
	0xca: Режим работы контроллера клавиатуры. бит 0 установлен для PS/2
		режима и сброшен для AT режима.
	0xd0: Получить порт вывода.
		бит 0: Установлен при сбросе процессора.
		бит 1: Установлен, если линия A20 разрешена.
		бит 2: Установлен, если кончились данные AUX. (data out)
		бит 3: Установлен, в случае сигнала таймера AUX. (clock signal)
		бит 4: Установлен, если полон буфер KBD.
		бит 5: Установлен, если полон буфер AUX.
		бит 6: Установлен, если кончились данные KBD. (data out)
		бит 7: Установлен, в случае сигнала таймера KBD. (clock
			signal)
	0xd1: Записать данные в порт вывода.
	0xd2: Симулировать прием данных из KBD порта. Байт данных необходимо
		передать в порт данных.
	0xd3: Симулировать прием данных из AUX порта. Байт данных необходимо
		передать в порт данных.
	0xd4: Передать байт данных в AUX порт. собственно байт необходимо
		записать в порт данных.
	0xe0: Прочитать тестовый порт.
	0xf?: Изменять порт вывода.


	1.5 Инициализация контроллера

Хост в порт 0x64:	0xaa	Self Test
Контроллер:		0x55	Success
Хост в порт 0x64:	0xab	KBD port test
Контроллер:		0x00	Success
Хост в порт 0x64:	0xa9	AUX port test
Контроллер:		0x00	Success

// Это чисто для информации.
Хост в порт 0x64:	0xa1	Get Version
Контроллер:		????	Version1
Хост в порт 0x64:	0xaf	Get Version
Контроллер:		????	Version2

Хост в порт 0x64:	0xca	Получить режим работы контроллера
Контроллер:		????	Если младший бит 1 - то все ок... иначе
				задумываемся надолго.

Хост в порт 0x64:	0x60	Write command register
Хост в порт 0x60:	????	Command register value


	2. Клавиатура.

Ранние клавиатуры были однонаправленными устройствами (readonly). Нынешние,
конечно, на порядок умнее.

Современные клавиатуры предоставляют возможность выбора из трех таблиц сканкодов.
[5.1.10], [5.1.11], [5.1.12]. По умолчанию устанавливается вторая таблица.

Помимо сканкодов от клавиатуры могут быть получены следующие коды:

	0x00: Ошибка клавиатуры. Очень много клавиш нажаты одновременно.
	0xaa: BAT (Basic Assurance Test) завершен.
	0xee: Эхо (ECHO).
	0xfa: Ответ (ACK).
	0xfe: Необходима повторная отправка данных в контроллер (RESEND).
	0xff: Ошибка клавиатуры.


	2.2 Команды

Если вы посылаете что-то, выходящее за допустимые границы, или что-то еще,
клавиатура реагирует на это кодом RESEND (0xfe).

Любая команда очищает буфер приема клавиатуры.

	Команды:

	0xed: Установить значение клавиатурных индикаторов (LEDs). В
		дополнительном байте передаются [2.3.3] Единичное значение бита
		показывает, что лампочка светится.
	0xee: Эхо. на эту команду клавиатура отзывается кодом ECHO (0xee).
		Команда служит для диагностических целей.
	0xf0: Выбор набора сканкодов. Клавиатура отвечает ACK. После этого
		передается номер набора сканкодов (1, 2, 3). Клавиатура и на это
		отвечает ACK. Если в качестве кода передается 0, после ACK
		клавиатура присылает номер текущего набора сканкодов.
	0xf2: Идентификация клавиатуры. XT клавиатура не вернет ничего (будет
		таймаут). AT клавиатура вернет ACK. MF II клавиатура вернет
		ACK, 0xab, 0x41 (Что за клавиатура такая?).
		Получить идентификатор устройства. два байта обещают. 0xAB, 0x83.
	0xf3: Настройка скорости повтора символов. Дополнительный байт
		определяет скорость повтора. Младшие 5 бит - скорость повтора
		клавиш [2.3.1]. Два более старших бита определяют задержку до
		начала повтора [2.3.2]. Последний бит всегда 0.
	0xf4: Разрешить клавиатуру. Эта команда очищает буфер и разрешает
		сканирование.
	0xf5: Сброс клавиатуры. Сканирование запрещено.
	0xf6: Сброс клавиатуры. Сканирование разрешено.
	0xfe: Повторная отправка последней передачи. (Возможно это реакция на
		RESEND?)
	0xff: Сброс. Вызывает BAT, в случае успеха возвращает ACK. Выполнение
		этой команды может занять до 750ms.

	2.3 Таблицы
	2.3.1 Скорость повтора

	Значение	Скорость (cps)
	0x00		30.0
	0x01		26.7
	0x02		24.0
	0x03		21.8
	0x04		20.7
	0x05		18.5
	0x06		17.1
	0x07		16.0
	0x08		15.0
	0x09		13.3
	0x0a		12.0
	0x0b		10.9
	0x0c		10.0
	0x0d		 9.2
	0x0e		 8.6
	0x0f		 8.0
	0x10		 7.5
	0x11		 6.7
	0x12		 6.0
	0x13		 5.5
	0x14		 5.0
	0x15		 4.6
	0x16		 4.3
	0x17		 4.0
	0x18		 3.7
	0x19		 3.3
	0x1a		 3.0
	0x1b		 2.7
	0x1c		 2.5
	0x1d		 2.3
	0x1e		 2.1
	0x1f		 2.0


	2.3.2 Задержка

	Значение	Задержка(секунд)
	0x00		0.25
	0x01		0.50
	0x02		0.75
	0x03		1.00


	2.3.3 индикаторы

	бит 0		ScrollLock
	бит 1		NumLock
	бит 2		CapsLock



	2.4 Инициализация

Host:     ED  Set/Reset Status Indicators
Keyboard: FA  Acknowledge
Host:     00  Turn off all LEDs
Keyboard: FA  Acknowledge

Host:     F2  Read ID
Keyboard: FA  Acknowledge
Keyboard: AB  First byte of ID

Host:     ED  Set/Reset Status Indicators     ;BIOS init
Keyboard: FA  Acknowledge
Host:     02  Turn on Num Lock LED
Keyboard: FA  Acknowledge

Host:     F3  Set Typematic Rate/Delay        ;Windows init
Keyboard: FA  Acknowledge
Host:     20  500 ms / 30.0 reports/sec
Keyboard: FA  Acknowledge

Host:     F4  Enable
Keyboard: FA  Acknowledge

Host:     F3  Set Typematic Rate/delay
Keyboard: FA  Acknowledge
Host:     00  250 ms / 30.0 reports/sec
Keyboard: FA  Acknowledge



	3 Непонятое.


	Порт 0x61

Этот порт служит для оповещения контроллера о приеме очередного сканкода.
Биты с нулевого по пятый используются для всякой ерунды типа спикера, A20Gate и
тд... Эти биты нельзя сбрасывать. их надо бережно сохранять. А вот старшие два
бита для нас представлябют интерес.

Для того чтобы уведомить клавиатуру о том, что сканкод нами принят нужно
установить, и тут же снова сбросить 8-й бит. все остальные биты сохраняются.

Что касается седьмого бита - его установка повлечет за собой сохранение
клавиатурных часов в низком и недоступном для детей месте Ж) (Hold keyboard
clock low -> Keyboard can't send any data).

Бытует мнение что для AT этот порт неинтересен. Неподтверждено.


	Определение наличия и типа клавиатуры.

В разработке.


	Инициализация клавиатуры.

Взято из [6.1]

// Запретить все
i8042_write_command_byte (I8042_CMD_DISABLE_ALL);

// Очистить буфер.
for (i = 0; i < MAX_JUNK_ITERATIONS; i++) {
	stat = ddi_get8 (I8042_STAT);
	if (! (stat & I8042_STAT_OUTBF))
		break;
	ddi_get8 (I8042_DATA);
}

// Зарегистрировать прерыывание

// Разрешить все.
i8042_write_command_byte (I8042_CMD_ENABLE_ALL);

	4. Работа с клавиатурой.

	4.1

i8042_write_command_byte (cb) {
	i8042_send(I8042_CMD, I8042_CMD_WCB);
	i8042_send(I8042_DATA, cb);
}

i8042_send (cb)
{
	// Эта операция производится в цикле
	// Максимальное время ожидания - 250ms
	stat = ddi_get8(I8042_STAT);
	if ((stat & I8042_STAT_INBF) == 0)
		ddi_put8(reg, val);
}

	4.2 Обработчик прерывания

// Читаем статус
stat = ddi_get8(I8042_STAT);

if (! (stat & I8042_STAT_OUTBF)) {
	// Левое прерывание
	return (DDI_INTR_UNCLAIMED);
}

// Читаем данные
byte = ddi_get8(I8042_DATA);

// Смотрим к кому относятся (Во как интересно!)
which_port = (stat & I8042_STAT_AUXBF) ? AUX_PORT : MAIN_PORT;



	5 Материалы по теме.
	5.1 Основные документы

5.1.1 http://www.nondot.org/sabre/os/files/HCI/keyboard.txt ENG 1*
5.1.2 http://www.nondot.org/sabre/os/files/HCI/keyboard2.txt ENG 3*
5.1.3 http://www.nondot.org/sabre/os/files/HCI/KeyboardFAQ.txt ENG 4*
5.1.4 http://www.beyondlogic.org/keyboard/keybrd.htm ENG 4*
	Примеры правда для какого-то микроконтроллера, но комментарии понятные.
5.1.5 http://www.datasheet4u.com/html/H/T/6/HT6542B_HoltekSemiconductorInc.pdf.html
5.1.6 http://www.datasheet4u.com/html/V/T/8/VT82C42_ETC.pdf.html 4*
	Описание контроллера клавиатуры от VIA.

5.1.8 http://www.computer-engineering.org/ps2keyboard/
	Описание протокола клавиатуры
5.1.9 http://www.computer-engineering.org/ps2protocol/
	Общая байда по PS/2 протоколу.
5.1.10 http://www.computer-engineering.org/ps2keyboard/scancodes1.html
5.1.11 http://www.computer-engineering.org/ps2keyboard/scancodes2.html
5.1.12 http://www.computer-engineering.org/ps2keyboard/scancodes3.html
	Варианты таблицы сканкодов.

	5.2 Документы около темы

5.2.1 http://www.computer-engineering.org/ps2mouse/
	Описание протокола мыши


	5.3 Примеры драйверов

5.3.1 http://cvs.opensolaris.org/source/xref/on/usr/src/uts/common/io/i8042.c 4*


	6 Благодарности

Можно присылать на адрес dron@infosec.ru
