=== modified file 'include/grub/multiboot.h'
--- include/grub/multiboot.h	2010-01-15 15:30:57 +0000
+++ include/grub/multiboot.h	2010-03-14 21:09:28 +0000
@@ -46,5 +46,7 @@
 				      int argc, char *argv[]);
 void grub_multiboot_set_bootdev (void);
 
+void grub_multiboot_set_syms(grub_uint32_t num, grub_uint32_t size, 
+			     grub_uint32_t addr, grub_uint32_t shndx);
 
 #endif /* ! GRUB_MULTIBOOT_HEADER */

=== modified file 'loader/i386/multiboot.c'
--- loader/i386/multiboot.c	2010-01-20 08:12:47 +0000
+++ loader/i386/multiboot.c	2010-03-14 21:07:34 +0000
@@ -140,6 +140,16 @@
   return grub_error (GRUB_ERR_UNKNOWN_OS, "unknown ELF class");
 }
 
+static void
+grub_multiboot_load_elfsym (grub_file_t file, void *buffer)
+{
+  if (grub_multiboot_is_elf32 (buffer)) {
+    grub_multiboot_load_elfsym32 (file, buffer);
+  } else if (grub_multiboot_is_elf64 (buffer)) {
+    grub_multiboot_load_elfsym64 (file, buffer);
+  }
+}
+
 void
 grub_multiboot (int argc, char *argv[])
 {
@@ -237,8 +247,14 @@
       grub_multiboot_payload_eip = header->entry_addr;
 
     }
-  else if (grub_multiboot_load_elf (file, buffer) != GRUB_ERR_NONE)
-    goto fail;
+  else 
+    {
+      if (grub_multiboot_load_elf (file, buffer) != GRUB_ERR_NONE) {
+	goto fail;
+      }
+      
+      grub_multiboot_load_elfsym(file, buffer);
+    }
 
   if (header->flags & MULTIBOOT_VIDEO_MODE)
     {

=== modified file 'loader/i386/multiboot_elfxx.c'
--- loader/i386/multiboot_elfxx.c	2010-01-18 20:51:35 +0000
+++ loader/i386/multiboot_elfxx.c	2010-03-14 21:10:19 +0000
@@ -22,12 +22,16 @@
 # define ELFCLASSXX	ELFCLASS32
 # define Elf_Ehdr	Elf32_Ehdr
 # define Elf_Phdr	Elf32_Phdr
+# define Elf_Shdr	Elf32_Shdr
+# define Elf_Addr	Elf32_Addr
 #elif defined(MULTIBOOT_LOAD_ELF64)
 # define XX		64
 # define E_MACHINE	EM_X86_64
 # define ELFCLASSXX	ELFCLASS64
 # define Elf_Ehdr	Elf64_Ehdr
 # define Elf_Phdr	Elf64_Phdr
+# define Elf_Shdr	Elf64_Shdr
+# define Elf_Addr	Elf64_Addr
 #else
 #error "I'm confused"
 #endif
@@ -152,8 +156,52 @@
   return grub_errno;
 }
 
+static int
+CONCAT(grub_multiboot_load_elfsym, XX) (grub_file_t file, const void *buffer)
+{
+  int i;
+  Elf_Ehdr *ehdr = (Elf_Ehdr *) buffer;
+  Elf_Shdr *shdr = (Elf_Shdr *) grub_malloc (ehdr->e_shentsize * ehdr->e_shnum);
+
+  if (grub_file_seek (file, ehdr->e_shoff) == (grub_off_t) -1)
+    return 0;
+
+  if (grub_file_read (file, shdr, ehdr->e_shentsize * ehdr->e_shnum) != ehdr->e_shentsize * ehdr->e_shnum)
+    return 0;
+
+  /* FIXME: does this belong here? */
+  grub_printf (", shtab=0x%x\n", (grub_uint32_t) shdr);
+
+  for (i = 0; i < ehdr->e_shnum; i++)
+    {
+      /* This section is a loaded section, so we don't care.  */
+      if (shdr[i].sh_addr != 0)
+	continue;
+
+      /* This section is empty, so we don't care.  */
+      if (shdr[i].sh_size == 0)
+	continue;
+
+      shdr[i].sh_addr = (Elf_Addr) grub_memalign (shdr[i].sh_addralign, shdr[i].sh_size);
+
+      if (grub_file_seek (file, shdr[i].sh_offset) == (grub_off_t) -1)
+	return 0;
+
+      if (grub_file_read (file, (void *)(shdr[i].sh_addr), shdr[i].sh_size) != shdr[i].sh_size)
+	return 0;
+    }
+
+  grub_multiboot_set_syms((grub_uint32_t)ehdr->e_shnum, 
+			  (grub_uint32_t)ehdr->e_shentsize, 
+			  (grub_uint32_t)shdr, 
+			  (grub_uint32_t)ehdr->e_shstrndx);
+  return 1;
+}
+
 #undef XX
 #undef E_MACHINE
 #undef ELFCLASSXX
 #undef Elf_Ehdr
 #undef Elf_Phdr
+#undef Elf_Shdr
+#undef Elf_Addr

=== modified file 'loader/i386/multiboot_mbi.c'
--- loader/i386/multiboot_mbi.c	2010-03-06 16:25:40 +0000
+++ loader/i386/multiboot_mbi.c	2010-03-14 21:18:14 +0000
@@ -58,6 +58,9 @@
 static int bootdev_set;
 static int accepts_video;
 
+static int syms_set;
+static struct multiboot_elf_section_header_table syms;
+
 void
 grub_multiboot_set_accepts_video (int val)
 {
@@ -319,6 +322,11 @@
       grub_errno = GRUB_ERR_NONE;
     }
 
+  if (syms_set) {
+    grub_memcpy(&mbi->u.elf_sec, &syms, sizeof(syms));
+    mbi->flags |= MULTIBOOT_INFO_ELF_SHDR;
+  }
+
   return GRUB_ERR_NONE;
 }
 
@@ -333,6 +341,7 @@
   grub_free (cmdline);
   cmdline = NULL;
   bootdev_set = 0;
+  syms_set = 0;
 
   for (cur = modules; cur; cur = next)
     {
@@ -472,3 +481,14 @@
     | ((part & 0xff) << 8) | 0xff;
   bootdev_set = 1;
 }
+
+void
+grub_multiboot_set_syms(grub_uint32_t num, grub_uint32_t size, 
+			grub_uint32_t addr, grub_uint32_t shndx)
+{
+	syms.num = num;
+	syms.size = size;
+	syms.addr = addr;
+	syms.shndx = shndx;
+	syms_set = 1;
+}

